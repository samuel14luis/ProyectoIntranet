/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import complementos.horaTO;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Alisoft
 */
public class PanelTablaHorarioAula extends javax.swing.JPanel {

    public boolean disponible = true;
    DefaultTableModel modelo;    
    
    public PanelTablaHorarioAula() {
        initComponents();
        modelo = (DefaultTableModel) jtblHorario.getModel();
        llenarDatos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtblHorario = new javax.swing.JTable();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jtblHorario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Hora", "Lunes", "Martes", "Miércoles", "Jueves", "Viernes", "Sábado", "Domingo"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtblHorario.setShowHorizontalLines(false);
        jtblHorario.setShowVerticalLines(false);
        jtblHorario.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(jtblHorario);
        if (jtblHorario.getColumnModel().getColumnCount() > 0) {
            jtblHorario.getColumnModel().getColumn(1).setResizable(false);
            jtblHorario.getColumnModel().getColumn(2).setResizable(false);
            jtblHorario.getColumnModel().getColumn(3).setResizable(false);
            jtblHorario.getColumnModel().getColumn(4).setResizable(false);
            jtblHorario.getColumnModel().getColumn(5).setResizable(false);
            jtblHorario.getColumnModel().getColumn(6).setResizable(false);
            jtblHorario.getColumnModel().getColumn(7).setResizable(false);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 820, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 387, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jtblHorario;
    // End of variables declaration//GEN-END:variables

    private void llenarDatos() {
        horaTO h = new horaTO(6,0);
        while(h.getHora() <= 23){
            agregarHora(h);
            h.agregarMinutos(45);
            //System.out.println("Hora: "+h);
        }
    }

    private void agregarHora(horaTO h) {
        modelo.addRow(
                new Object []{
        new horaTO(h.getHora(), h.getMinuto()), null, null, null, null, null, null, null
    });
    }

    private String to(int minuto) {
        if (minuto < 10) {
            return "0"+minuto;
        }
        return String.valueOf(minuto);
    }

    private void agregarMinutos(int hora, int minuto, int i) {
        minuto+=i;
        if (minuto >=60) {
            hora++;
            minuto = 0;
        }
    }
    
    
}
